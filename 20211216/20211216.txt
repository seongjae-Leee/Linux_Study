우분투로 서버 만들어 보기
$ sudo su -
$ cd /home/seongjae
$ mkdir server   // 서버 디렉토리 생성
$ cd server
$ npm -v   // npm 깔려있는지 확인
$ npm init   // 각종 정보 입력
$ ls -al   //확인
$ npm install express   // 서버 연결을 위해
$ vi server.js
  i
  내용 입력하고
  :wq
$ cat server.js   // 내용 확인
$ noder server.js    // 실행해서 console.log() 뜨는지 확인
$ ctrl + z 로 나오고
$ ps -ef   // 프로세스 확인해보면 node server.js가 백그라운드에서 돌고 있음
$ kill -9 476   // node server.js 죽이고
$ node server.js &   // 백그라운드에서 돌림

제어판에서 윈도우 방화벽 설정으로 간 뒤 인바운드 규칙에서 새 규칙으로 3000 포트 하나 추가해 열어주고
cmd에서 ipconfig로 내 ip 확인해서 192.168.45.168:3000 을 하면 나랑 같은 네트워크망을 쓰는 사람들은 내 페이지를 볼 수 있게 됨


▼ 이제부터 쉘 스크립트 .. seongjae 폴더에 workspace 폴더 만들고 진행
$ echo $SHELL   // 결과값 : /bin/bash
$ cat /etc/shells
cf) $ chsh /bin/dash    // 쉘을 바꿔서 할 수 있음
$ date; whoami   // 세미콜론으로 명령어 두개 한번에 입력할 수 있음
cf) $ &&으로 엠퍼센트... 틀리지 않을 때까지만 실행할 수 있음
$ multicommand.sh
  i
  #!/bin/bash   // 스크립트 최상단에는 항상 이 구문이 적혀있어야 한다.  
  date
  whoami
  esc
  :wq
$ chmod u+x multicommand.sh
$ ./multicommand.sh   // 권한주고 실행시 날짜와 root 뜸
$  vi helloworld.sh
#!/bin/bash
echo "hello seongjae"
printf "hellow eunjin"
$ ./helloworld.sh   // 권한주고 실행시 hello seongjae 뜸
$ echo Let's see if this'll work   // 이렇게 치면 결과값이 Lets see if thisll work. 즉 따옴표 안 됨
  제대로 따옴표까지 나오게 하려면 문자열 앞뒤에 "" 쌍따옴표 넣어줘야 함. cf) 문자열 안에 ""가 있으면 밖에는 ''따옴표가 있어야 함.
$ 
$ touch test1.sh
$ vi test1.sh
  #!/bin/bash
  #This is test shell script
  echo The time and date are:
  date
  echo "Lets's see who's logged into the system."
  whoam i
  esc
  :wq
$ ./test1.sh    // 권한주고 실행해보면 날짜와 root라는 메시지가 나온다리
$ 
입력구조를 가지는 쉘 스크립트를 만들어보자
$ vi configname.sh
i
#!/bin/bash
echo "What is your name?"
read PERSON
echo "What's good $PERSON"
esc
:wq
$ ./configname.sh
What is your name?
성재
What's good 성재

▼ 쉘 변수 (shell variable)
- 변수는 컴퓨터 메모리에 존재하고 할당된 메모리 공간은 정보를 저장하기 위해 사용된다. 정보가 저장된 공간을 찾기 위해서, 이름을 붙여서 사용한다.
- 변수의 할당된 값은 숫자, 텍스트 파일, 파일 이름, 장치 또는 다른 유형의 데이터.
- 할당된 메모리의 주소를 나타내는 포인터이기 때문에 변수를 생성, 할당, 삭제가 가능.
- 쉘에서 변수 이름을 지칭하는 규칙은 다음과 같다.
  - 변수 안에 들어갈 수 있는 글자는 a to z, A to Z이다. (한글x)
  - 변수 안에 들어갈 수 있는 숫자는 0 ~ 9 까지이다.
  - 서로 다른 변수 이름을 이어서 사용하기 원한다면 underscore character ( _ ) 을 사용한다.
  - 쉘 변수의 이름은 대문자를 사용한다.
    - 올바른 변수 선언 예시 : _ALL, NAME, VAR_1, VAR_2
    - 잘못된 변수 선언 예시 : 2_VAR, -VARIABLE, VAR1-VAR2, VAR_A! (쉘에서 ! - * 같은 특수문자는 지칭하는 의미가 존재하기 때문에 사용할 수 없다.)
  - 변수를 정의하는 일반적인 방법 : viarable_name=variable_value, NAME="Lucas"
  - 스칼라 변수 : ORGANIZATIONS="wisoft", NUMBER_OF_PEOPLE=30

- 변수에 저장된 값에 접근하려면 이름 앞에 $기호를 사용한다. 아래 예제에서는 정의된 변수 NAME 값에 접근하고 STDOUT으로 출력한다.
$ vi variable.sh
  #!/bin/bash
  NAME="lucas"
  echo $NAME
  esc
  :wq
$ ./variable.sh   // 권한주고 실행하면 lucas 뜸
- 변수 타입
  : 지역변수, 전역변수, 환경변수, 예약변수
$ 