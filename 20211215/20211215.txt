◎ Pakcage managing (패키지 관리)
패키지 관리란 새로운 소프트웨어를 설치, 업데이트, 삭제하는 일을 말한다.
배포 형태|- 소스코드 형태
         |- 바이너리 패키지 형태 (응용프로그램, 라이브러리, 버전 정보와 같은 것까지 다 담겨 있음)
저장소에 저장됨.
패키지 간의 의존성 존재. 리눅스 패키지 관리 시스템이 이 의존성을 해결하는 기능을 제공함.

리눅스 배포판에 따라 서로 다른 패키지 형식을 지원함. |- Debian 계열(Debian, Ubuntu 등) : .deb 파일
                                                  |- RedHat 계열(RedHat, Fedora, CentOS) : .rpm 파일
                                                  |- openSUSE 계열 : openSUSE를 위해 특별히 빌드된 .rpm 파일

Ubuntu에서는 /var/cache/apt/archives 디렉토리에 다양한 .deb 파일들을 보관함.

두 유형의 패키지 관리 도구 |- 저수준 툴 : 실제 패키지의 설치, 업데이트, 삭제 등을 수행 (dpkg)
                          |- 고수준 툴 : 의존성의 해결, 패키지 검색 등의 기능을 제공 (apt-get / aptitude)
dpkg : Debian 기반의 리눅스에서 사용되는 저수준 패키지 관리자(low-level package manager)
       $ dpkg --help
       $ dpkg -i [설치패키지명].deb   : 패키지의 설치
       $ dpkg -l   : 설치된 패키지를 나열
       $ dpkg -l [패키지명] : 설치되었는지 확인
       $ dpkg -r [설치된 패키지명] : 설치된 패키지를 삭제

       ex) sudo su -
           cd /var/cache/apt/archives
           sudo apt-get -d install minicom
           dpkg -i minicom_2.7.1-1.1_amd64.deb
           dpkg -l // 확인
           dpkg -r minicom_2.7.1-1.1_amd64.deb // 삭제
           dpkg -l | grep minicom
           cf) sudo dpkg -P minicom 하면 미니콤 완전 삭제

- apt-get / apt-cache의 경우 패키지 리포지토리는 /etc/apt/sources.list에 명시되어 있음.
  저 주소로 가서 cat이나 vi sources.list 해보면 버전정보, 배포 유형 등이 나옴

- sudo apt update 하면 패키지 리포지토리 리스트를 업데이트할 수 있다.

- 파일 다운로드
  wget  vs  curl

  공통점 : HTTP, HTTPS, FTP 프로토콜을 통해 컨텐츠를 다운로드하는 커맨드 라인 툴이다
           HTTP POST request를 지원한다.(즉, 웹사이트로 데이터를 전송할 수 있다.)
           HTTP 쿠키를 지원한다
           스크립트처럼 사용자 인터렉션없이 수행될 수 있도록 설계되었다.
           오픈소스이며 무료이다.
           90년대에 시작한 프로젝트이다.
           metalink를 지원한다.
  
● wget : 인터넷에서 파일을 받는 가장 좋은 방법이다. 간단하고 직관적으로 사용 가능. 별도의 라이브러리가 없다.
         재귀적으로 다운로드한다.(즉, 페이지에 있는 모든 내용이나 FTP 디렉토리에 있는 모든 파일들을 한번에 그대로 복사해온다.)
         여러 복잡한 다운로드 상황을 거의 다 제어할 수 있다.
         인터넷에서 단일 파일을 받아 현재 디렉토리에 저장하는 방법이다.
         $ wget DOWNLOAD-URL
    해보기
    $ cd /home/seongjae
    $ wget https://google.com
    $ vi index.html
    $ wget https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.17.2.tar.xz

    다른이름으로 저장하기
    $ wget http://www.vim.org/scripts/download_script.php?src_id=7701  -> 마지막 / 뒤에 있는 대로 파일 이름이 저장됨
    $ wget -O taglist.zip http://www.vim.org/scripts/download_script.php?src_id=7701  -> -O 뒤에 이름으로 저장하는 방법을 쓰면 깰끔

    백그라운드에서 다운로드하기
    $ wget -b [http 주소]

@ 실습1
  1) 브라우저에서 다운로드하는 것처럼 user-agent 정보 보내기
      구글에서 user agent 확인하고
      wget --user-agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36" https://google.com
  2) 다운로드 가능한지 확인하기 (-spider 옵션)
      wget -spider http://google.com
  3) 재시도 횟수 지정하기 (-tries 옵션.. 기본인 20번 재시도 횟수보다 더 지정할수도 있음)
      wget -tries=75 http://google.com
  4) 여러 개의 파일 다운로드하기
      $ wget -i FILE-WHICH-HAS-URLS
  5) ftp 다운로드하기
      anonymous ftp 다운로드는 아래와 같다.
      $ wget FTP-URL
      인증이 필요한 ftp는 '--ftp-user'와 '--ftp-password'를 입력해야 한다.
      $ wget --ftp-user=USERNAME --ftp-password=PASSWORD FTP-URL


● curl
$ man curl 하면 curl에 대해 확인 가능
$ curl http://example.com/resource > foo.txt  // URL을 foo.txt라는 파일에다가 저장을 하는 것 (PIPE는 결과값이 전달된다면 > 는 파일 형태로 전달되는 것)
$ cat foo.txt

저장할 때 파일 이름
1. $ curl -o foo.txt http://example.com/resource // 소문자 o로 파일이름 지정
2. $ curl -O http://example.com/resource/foo.txt  // 대문자 O로 파일이름 그대로 사용

여러 파일 다운로드 받기
1. $ curl -O http://example.com/foo[0-9].txt        // foo0.txt부터 foo9.txt 파일을 다운로드
2. $ curl -O http://example.com/foo-[a-z][0-9].txt  // foo-a0.txt부터 foo-z9.txt까지 다운로드
3. $ curl -O http://example.com/{foo,bar,baz}.txt   // foo.txt, bar.txt, baz.txt 모두 다운로드. 띄어쓰기 하면 안 됨
    cf) rm *.txt 하면 txt파일은 다 사라지고 rm foo*.txt 하면 foo어쩌구.txt를 다 지울 수 있음

for 문으로 여러 파일 다운로드하기.. 싱글라인으로 호출하는 경우 제대로 다운받아지지 않는 경우가 있다.
1. $ files="foo bar baz"
2. $ for name in files
     > do curl -O "http://example.com/${name}.txt"
     > done
       -> 이렇게 하면 files.txt만 받아지게 되고, for name in foo bar baz 다음에 do done을 하면 세개가 저장됨.
       -> for name in $files 라고 하면 변수 설정이 먹혀서 잘 작동됨.
vi testcurl 해서 쉘 스크립트 써주고
실행권한이 없으므로 chmod u+x testcurl.sh 로 실행권한 주고
./testcurl.sh로 실행해도 똑같음

