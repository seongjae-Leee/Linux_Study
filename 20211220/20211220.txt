@ 관계 연산자
   Operator                       Description                                                          Example
1.  -eq        두 피연산자의 값이 동일한지 여부를 확인하여 같으면 참을 반환                              [$a -eq $b]
2.  -ne        두 피연산자의 값이 동일한지 여부를 확인하여 같지 않으면 참을 반환                         [$a -ne $b]
3.  -gt        왼쪽 피연산자의 값이 오른쪽 피연산자의 값보다 큰지 확인하고 그렇다면 조건이 참             [$a -gt $b]
4.  -lt        왼쪽 피연산자의 값이 오른쪽 피연산자의 값보다 작은지 확인하고 그렇다면 조건이 참           [$a -lt $b]
5.  -ge        왼쪽 피연산자의 값이 오른쪽 피연산자의 값보다 크거나 같은지 확인하고 그렇다면 조건이 참     [$a -ge $b]
6.  -le        왼쪽 피연산자의 값이 오른쪽 피연산자의 값보다 작거나 같은지 확인하고 그렇다면 조건이 참     [$a -le $b]

@ Boolean 연산자
  Operator     Description        Example
1.   !           논리 부정        [!false] is true
2.   -o          OR 연산자        [$a -lt 20 -o $b -gt 100] is true
3.   -a          AND 연산자       [$a -lt 20 -o $b -gt 100] is false

@ 문자열 연산자
   Operator     Description                                     Example
1.   =           두 피연산자의 값을 확인하고 같다면 참           [$a = $b]
2.   !=          두 피연산자의 값을 확인하고 같지 않으면 참      [$a != $b]
3.   -z          주어진 문자열 피연산자의 길이가 0이면 참        [-z.................]
4.   -n          
5.   str         

@ 파일 테스트 연산자 : 로그를 확인할 때 유용하게 쓰일 것
............
.............
.................


---- 실습 1 ----
1. 오늘 날짜를 저장하는 파일을 생성
2. 저장 위치 : /home/seonjae/date_log, 파일 이름 : Date_211210.txt
3. 저장 위치에 해당하는 폴더, 파일이 없으면 쉘스크립트를 통해서 생성되도록 처리
▶ 사진자료로 게시 完

---The case...esac Statement

#!/bin/bash
FRUIT="kiwi"

case "$FRUIT" in
"apple") echo "Apple tastes goooood"
;;
"banana") echo "I like banana milk"
;;
"kiwi") echo "New Zealand is famous for kiwi"
;;
esac


---The case...esac Statement2

#!/bin/bash
option="${1}"
case ${option} in
-f) FILE="${2}"
echo "File name is $FILE"
;;
-d DIR="${2}"
echo "Dir name is $DIR"
;;
*)
echo "`basename ${0}`:usage: [-f file] | [-d directory]"
exit 1 # Command to come out of the program with status 1
;;
esac
